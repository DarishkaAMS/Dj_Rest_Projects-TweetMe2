[{"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\index.js":"1","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\reportWebVitals.js":"2","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\App.js":"3","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\index.js":"4","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\components.js":"5","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\index.js":"6","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\components.js":"7"},{"size":777,"mtime":1610082813531,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":659,"mtime":1609998155007,"results":"11","hashOfConfig":"9"},{"size":155,"mtime":1609998154987,"results":"12","hashOfConfig":"9"},{"size":3801,"mtime":1610426550015,"results":"13","hashOfConfig":"9"},{"size":101,"mtime":1610340587255,"results":"14","hashOfConfig":"9"},{"size":1740,"mtime":1610427062283,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1b696u0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\index.js",[],["32","33"],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\reportWebVitals.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\App.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\index.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\components.js",["34"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {createTweet, loadTweets} from '../lookup'\r\n\r\nexport function TweetsComponent(props){\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n        // change this to a server side call\r\n        console.log('new value', newVal)\r\n        createTweet(newVal, (response, status)=>{\r\n            console.log(response, status)\r\n            if (status === 201){\r\n                tempNewTweets.unshift(response)\r\n            } else {\r\n                console.log(response)\r\n                alert('An error occurred, please try again')\r\n            }\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <div className='col-12 mb-3'>\r\n     <form onSubmit={handleSubmit}>\r\n        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n    </form>\r\n        </div>\r\n            <TweetsList newTweets={newTweets} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const myCallback = (response, status) => {\r\n                if (status === 200) {\r\n                    setTweetsInit(response)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert('There was an error')\r\n            }\r\n        }\r\n        loadTweets(myCallback)\r\n        }\r\n     }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\r\n    return tweets.map((item, index) => {\r\n        return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={'${index}-{item.id}'} />\r\n    })\r\n}\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type === 'like') {\r\n            if (userLike === true) {\r\n                setLikes(likes - 1)\r\n                setUserLike(false)\r\n            } else {\r\n                setLikes(likes + 1)\r\n                setUserLike(true)\r\n            }\r\n        }\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n\r\n}\r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'></div>\r\n            <ActionBtn tweet={tweet} action={{type:'like', display: 'Likes'}}/>\r\n            <ActionBtn tweet={tweet} action={{type:'unlike', display: 'Unlike'}}/>\r\n            <ActionBtn tweet={tweet} action={{type:'retweet', display: 'Retweet'}}/>\r\n        </div>\r\n}","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\index.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\components.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":62,"column":89,"nodeType":"41","messageId":"42","endLine":62,"endColumn":109},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]