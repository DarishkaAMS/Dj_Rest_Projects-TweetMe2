[{"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\index.js":"1","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\reportWebVitals.js":"2","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\App.js":"3","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\index.js":"4","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\components.js":"5","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\index.js":"6","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\components.js":"7","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\lookup.js":"8"},{"size":777,"mtime":1610082813531,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":659,"mtime":1609998155007,"results":"12","hashOfConfig":"10"},{"size":155,"mtime":1609998154987,"results":"13","hashOfConfig":"10"},{"size":3867,"mtime":1610513587873,"results":"14","hashOfConfig":"10"},{"size":76,"mtime":1610512215662,"results":"15","hashOfConfig":"10"},{"size":1515,"mtime":1610512196308,"results":"16","hashOfConfig":"10"},{"size":443,"mtime":1610512854961,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1b696u0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\index.js",[],["37","38"],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\reportWebVitals.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\App.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\index.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\components.js",["39"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {\r\n    apiTweetAction,\r\n    apiTweetCreate,\r\n    apiTweetList} from './lookup'\r\n\r\nexport function TweetsComponent(props){\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        let tempNewTweets = [...newTweets]\r\n        if (status === 201){\r\n            tempNewTweets.unshift(response)\r\n            setNewTweets(tempNewTweets)\r\n        } else {\r\n            console.log(response)\r\n            alert('An error occurred, please try again')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <div className='col-12 mb-3'>\r\n     <form onSubmit={handleSubmit}>\r\n        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n    </form>\r\n        </div>\r\n            <TweetsList newTweets={newTweets} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setTweetsInit(response)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert('There was an error')\r\n            }\r\n        }\r\n        apiTweetList(handleTweetListLookup)\r\n        }\r\n     }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\r\n    return tweets.map((item, index) => {\r\n        return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={'${index}-{item.id}'} />\r\n    })\r\n}\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n//    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if (status === 200) {\r\n            setLikes(response.likes)\r\n//            setUserLike(true)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n\r\n}\r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'></div>\r\n            <ActionBtn tweet={tweet} action={{type:'like', display: 'Likes'}}/>\r\n            <ActionBtn tweet={tweet} action={{type:'unlike', display: 'Unlike'}}/>\r\n            <ActionBtn tweet={tweet} action={{type:'retweet', display: 'Retweet'}}/>\r\n        </div>\r\n}","D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\index.js",[],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\lookup\\components.js",[],["40","41"],"D:\\DJANGO\\Django_Projects-TweetMe2\\tweetme2-web\\src\\tweets\\lookup.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":67,"column":89,"nodeType":"48","messageId":"49","endLine":67,"endColumn":109},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["52"],["53"],"no-global-assign","no-unsafe-negation"]