{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEL","getElementById","ReactDOM","render","createElement","tweetsEL","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.9d6bebe3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData\r\n    if (data){\r\n        jsonData = JSON.stringify(data)\r\n        }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = 'json'\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n\r\n        if (csrftoken){\r\n            xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n            xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n        }\r\n        xhr.onload = function() {\r\n            callback(xhr.response, xhr.status)\r\n        }\r\n        xhr.onerror = function (e) {\r\n            console.log(e)\r\n            callback({'message': 'The request was an error'}, 400)\r\n        }\r\n        xhr.send(jsonData)\r\n    }\r\n","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup('POST', '/tweets/action/', callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback){\r\n    backendLookup('GET', `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback){\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}","import React, {useState} from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n        <p className='mb-0 text-muted small'>Retweet</p>\r\n        <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201){\r\n           if (didRetweet){\r\n                didRetweet(newActionTweet)\r\n           }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n        <div>\r\n            <p>{tweet.id} - {tweet.content}</p>\r\n            <ParentTweet tweet={tweet} />\r\n        </div>\r\n       <div className='btn btn-group'>\r\n         {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display: 'Likes'}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display: 'Unlike'}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display: 'Retweet'}}/>\r\n            </React.Fragment>\r\n         }\r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201){\r\n            didTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert('An error occurred, please try again')\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n             <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n            </form>\r\n    </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setTweetsInit(response)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert('There was an error')\r\n            }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n        }\r\n     }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index) => {\r\n        return <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Tweet} from './detail'\r\nimport {TweetCreate} from './create'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\n\r\nexport function TweetsComponent(props){\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert('There was an error finding your tweet :(')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n            <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\n\nconst appEL = document.getElementById('root')\nif (appEL) {\n    ReactDOM.render(<App />, appEL);\n}\n\nconst e = React.createElement\nconst tweetsEL = document.getElementById('tweetme-2')\nif (tweetsEL) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEL.dataset), tweetsEL);\n}\n\nconst tweetDetailElement = document.querySelectorAll('.tweetme-2-detail')\n\ntweetDetailElement.forEach(container => {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), container);\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}