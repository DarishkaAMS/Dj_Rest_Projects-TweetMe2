{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hidelink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEL","getElementById","ReactDOM","render","createElement","tweetsEL","dataset","tweetsFeedEL","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.14783c66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData\r\n    if (data){\r\n        jsonData = JSON.stringify(data)\r\n        }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = 'json'\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n\r\n        if (csrftoken){\r\n//            xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n            xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n        }\r\n        xhr.onload = function() {\r\n            if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n                if (detail === \"Authentication credentials were not provided.\") {\r\n                    if (window.location.href.indexOf('login') === -1){\r\n                        window.location.href = \"/login?showLoginRequired=true\"\r\n                    }\r\n                }\r\n            }\r\n        callback(xhr.response, xhr.status)\r\n        }\r\n        xhr.onerror = function (e) {\r\n            callback({'message': 'The request was an error'}, 400)\r\n        }\r\n        xhr.send(jsonData)\r\n    }\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup('POST', '/tweets/action/', callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback){\r\n    backendLookup('GET', `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl){\r\n    let endpoint = \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl){\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n\r\n}","import React from 'react'\r\n\r\nexport function UserLink(props){\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href= `/profiles/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hidelink} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}`: null\r\n\r\n    return <React.Fragment>\r\n        {nameDisplay}{\" \"}\r\n        {hidelink === true ? `@${user.username}` : <UserLink username={user.username}> @{user.username} </UserLink>}\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user, hidelink} = props\r\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n    {user.username[0]}\r\n    </span>\r\n    return hidelink === true ? userIdSpan : <UserLink username={user.username}> {userIdSpan} </UserLink>\r\n}\r\n","import numeral from 'numeral'\r\nimport React from 'react'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import numeral from 'numeral'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\r\n\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"I'm loading it...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hidelink/>\r\n        <p> <UserDisplay user={user} includeFullName hidelink/> </p>\r\n        <p> <DisplayCount> {user.follower_count} </DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\r\n        <p> <DisplayCount> {user.following_count} </DisplayCount> following </p>\r\n        <p> {user.bio} </p>\r\n        <p> {user.location} </p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}> {currentVerb} </button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false){\r\n            apiProfileDetail(username, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\r\n//            console.log(response, status)\r\n            if (status === 200){\r\n                setProfile(response)\r\n//                apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n    }\r\n    return didLookup === false ? \"I am loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\r\n    }\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback){\r\n    backendLookup('GET', `/profiles/${username}/`, callback)\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback){\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup('POST', `/profiles/${username}/follow`, callback, data)\r\n}","import React, {useState} from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {UserDisplay, UserPicture} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201){\r\n           if (didRetweet){\r\n                didRetweet(newActionTweet)\r\n           }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n            {isRetweet === true && <div className='mb-2'>\r\n            <span className='small text-muted'> Retweet via <UserDisplay user={retweeter} /> </span>\r\n            </div>}\r\n    <div className='d-flex'>\r\n        <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className='col-11'>\r\n        <div>\r\n            <p>\r\n                <UserDisplay includeFullName user={tweet.user}/>\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n            <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n        </div>\r\n        <div className='btn btn-group px-0'>\r\n        {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display: 'Likes'}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display: 'Unlike'}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display: 'Retweet'}}/>\r\n            </React.Fragment>\r\n        }\r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}> View </button>}\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201){\r\n            didTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert('An error occurred, please try again')\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n             <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n            </form>\r\n    </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert('Oops... There was an error')\r\n            }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n        }\r\n     }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                } else {\r\n                    alert('Oops... There was an error')\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n        return <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'> Load next </button>}\r\n    </React.Fragment>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                }\r\n            }\r\n        apiTweetFeed(handleTweetListLookup)\r\n        }\r\n     }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n        return <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'> Load next </button>}\r\n    </React.Fragment>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Tweet} from './detail'\r\nimport {TweetCreate} from './create'\r\nimport {TweetsList} from './list'\r\nimport {FeedList} from './feed'\r\nimport {apiTweetDetail} from './lookup'\r\n\r\nexport function FeedComponent(props){\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <FeedList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetsComponent(props){\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert('There was an error finding your tweet :(')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n            <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\n\nconst appEL = document.getElementById('root')\nif (appEL) {\n    ReactDOM.render(<App />, appEL);\n}\n\nconst e = React.createElement\nconst tweetsEL = document.getElementById('tweetme-2')\nif (tweetsEL) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEL.dataset), tweetsEL);\n}\n\nconst tweetsFeedEL = document.getElementById('tweetme-2-feed')\nif (tweetsFeedEL) {\n    ReactDOM.render(\n        e(FeedComponent, tweetsFeedEL.dataset), tweetsFeedEL);\n}\n\nconst tweetDetailElement = document.querySelectorAll('.tweetme-2-detail')\n\ntweetDetailElement.forEach(container => {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeElement = document.querySelectorAll('.tweetme-2-profile-badge')\n\nuserProfileBadgeElement.forEach(container => {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), container);\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}